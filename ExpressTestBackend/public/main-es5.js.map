{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/contact.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/contactinput/contactinput.component.ts","webpack:///src/app/contactinput/contactinput.component.html","webpack:///src/app/failure/failure.component.ts","webpack:///src/app/failure/failure.component.html","webpack:///src/app/listing/listing.component.ts","webpack:///src/app/listing/listing.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","template","styleUrls","AppModule","declarations","providers","bootstrap","Contact","firstname","lastname","zipcode","city","street","housenumber","phone","email","ContactComponent","templateUrl","ContactinputComponent","http","contact","post","value","addContact","subscribe","console","log","sendContact","FailureComponent","ListingComponent","title","base","contactdata","get","getContact","data","showContact","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FailureComponent } from './failure/failure.component';\nimport { ListingComponent } from './listing/listing.component';\n\nconst routes: Routes = [\n\t{ path: '', component: ListingComponent },\n\t{ path: '**', component: FailureComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n\t<nav>\n\t\t<ul>\n\t\t\t<li><a routerLink=\"/\" routerLinkActive=\"active\">Home</a></li>\n\t\t\t<li><a routerLink=\"/woanders\" routerLinkActive=\"active\">Woanders</a></li>\n\t\t</ul>\n\t</nav>\n\t\t<router-outlet></router-outlet>\n\t`,\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent {\n  \n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { ContactinputComponent } from './contactinput/contactinput.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FailureComponent } from './failure/failure.component';\nimport { ListingComponent } from './listing/listing.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactComponent,\n    ContactinputComponent,\n    FailureComponent,\n    ListingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\t\tHttpClientModule,\n\t\tReactiveFormsModule,\n\t\tNoopAnimationsModule,\n\t\tTextFieldModule,\n\t\tMatFormFieldModule,\n\t\tFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Contact {\n\t\n\tconstructor(\n\t\tpublic id: number,\n\t\tpublic firstname: string,\n\t\tpublic lastname: string,\n\t\tpublic zipcode: string,\n\t\tpublic city: string,\n\t\tpublic street: string,\n\t\tpublic housenumber: string,\n\t\tpublic phone: string,\n\t\tpublic email: string\n\t) { }\n}\n","import { Component, Input, OnChanges, SimpleChange } from '@angular/core';\nimport { Contact } from '../contact'\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent {\n\n\t@Input() contact : Contact;\n\t\t\n}\n","{{contact.firstname}}\n{{contact.lastname}}\n{{contact.zipcode}}\n{{contact.city}}\n{{contact.street}}\n{{contact.housenumber}}\n{{contact.phone}}\n{{contact.email}}\n","import { Component, Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Contact } from '../contact';\n\nimport { Observable, throwError} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-contactinput',\n  templateUrl: './contactinput.component.html',\n  styleUrls: ['./contactinput.component.scss']\n})\n\n@Injectable()\nexport class ContactinputComponent  {\n\tfirstname = new FormControl('');\n\tlastname = new FormControl('');\n\tzipcode = new FormControl('');\n\tcity = new FormControl('');\n\tstreet = new FormControl('');\n\thousenumber = new FormControl('');\n\tphone = new FormControl('');\n\temail = new FormControl('');\n\t\n\tconstructor(private http: HttpClient) {\n\t\t\n\t}\n\t\n\taddContact (contact: Contact): Observable<Contact> {\n\t\treturn this.http.post<Contact>('/contactapi', contact);\n\t}\n\t\n\tsendContact() {\n\t\tlet contact = new Contact(0,\n\t\tthis.firstname.value,\n\t\tthis.lastname.value,\n\t\tthis.zipcode.value,\n\t\tthis.city.value,\n\t\tthis.street.value,\n\t\tthis.housenumber.value,\n\t\tthis.phone.value,\n\t\tthis.email.value);\n\t\tthis.addContact(contact).subscribe(contact => console.log(contact));\n\t}\n}\n","<form (submit)=\"sendContact()\">\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Vorname: </mat-label>\n\t<input matInput [formControl]=\"firstname\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Nachname: </mat-label>\n\t<input matInput [formControl]=\"lastname\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Postleitzahl: </mat-label>\n\t<input matInput [formControl]=\"zipcode\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Stadt: </mat-label>\n\t<input matInput [formControl]=\"city\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Straße: </mat-label>\n\t<input matInput [formControl]=\"street\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Hausnummer: </mat-label>\n\t<input matInput [formControl]=\"housenumber\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Telefonnummer: </mat-label>\n\t<input matInput [formControl]=\"phone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n\t<mat-label>Email: </mat-label>\n\t<input matInput [formControl]=\"email\">\n</mat-form-field>\n<button mat-button>Submit</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-failure',\n  templateUrl: './failure.component.html',\n  styleUrls: ['./failure.component.scss']\n})\nexport class FailureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>failure works!</p>\n","import { Component, ViewChild, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ContactComponent } from '../contact/contact.component';\nimport { Contact } from '../contact/contact';\nimport { ContactinputComponent } from '../contactinput/contactinput.component';\n\nimport { Observable, throwError} from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-listing',\n  templateUrl: './listing.component.html',\n  styleUrls: ['./listing.component.scss']\n})\n\n@Injectable()\nexport class ListingComponent {\n\ttitle = 'Contactor';\n\tbase = 'Ganz einfach';\n\tcontactdata = [];\n\t@ViewChild(ContactComponent) contact: ContactComponent;\n\t\n\tconstructor(private http: HttpClient) {\n\t\t\n\t}\n\t\n\tgetContact() {\n\t\treturn this.http.get('/contactapi');\n\t}\n\t\n\tshowContact() {\n\t\tthis.getContact().subscribe((data: [Contact]) => {\n\t\t\tthis.contactdata = data;\n\t\t});\t\n\t}\n}\n","<h1>{{title}}</h1>\n<h2>This is a basic Express Contact App</h2>\n<p>{{base}}</p>\n<ul>\n<li *ngFor=\"let contactdatum of contactdata\">\n<app-contact [contact]=\"contactdatum\"></app-contact>\n</li>\n</ul>\n<button mat-button (click)=\"showContact()\">Get</button>\n<p>Neu?</p>\n<app-contactinput></app-contactinput>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}